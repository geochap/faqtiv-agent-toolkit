Use function executeAgentCommand to execute faqtiv cli commands in the agent directory:

### Initializing a New Project
To initialize a new project, use the `init` command:

```bash
faqtiv init <projectRoot> --runtime <value>
```

- `<projectRoot>`: The root directory of the new project.
- `--runtime <value>`: The runtime environment, either `javascript` or `python`. Defaults to `javascript`.

### Configuration

#### Setting Environment Variables

To add or update an environment variable in your project's `.env` file, use the `set-env-var` command:

```bash
faqtiv set-env-var <key> <value>
``` 

- `<key>`: The key for the environment variable.
- `<value>`: The value for the environment variable.

This command will add or update the environment variable in your project's `.env` file.

### Updating Function Headers
In order to generate code first we need to generate function signature headers for your functions, use the `update-headers` command:

```bash
faqtiv update-headers
```

### Managing Modules
Modules are external javascript or python libraries that are required by your function libraries.

#### Adding a Module
To add a new module, use the `add-module` command:

```bash
faqtiv add-module <name> [alias] [version]
```

### Managing Functions

#### Listing Functions

To list existing functions and libs with their code, use the `list-functions` command:

```bash
faqtiv list-functions
```

Options:
- `--json`: Output the result in JSON format

This command displays all the functions and libraries in the project, including their names and code content.

#### Adding a Function
To add a new function to the project, use the `add-function` command:

```
faqtiv add-function <name> <code>
```

- `<name>`: The name of the function.
- `<code>`: The code for the function.

This command will add the new function to the `functions` directory in your project.

#### Removing a Function
To remove an existing function, use the `remove-function` command:

```bash
faqtiv remove-function <name>
```

- `<name>`: The name of the function.

This command will remove the function from the `functions` directory in your project.

#### Updating a Function
To update an existing function, use the `update-function` command:

```bash
faqtiv update-function <name> <newCode>
``` 

- `<name>`: The name of the function.
- `<newCode>`: The new code for the function.

This command will update the function in the `functions` directory in your project. 

### Managing Agent Instructions

#### Showing Current Instructions

To display the current agent instructions, use the `show-instructions` command:

```bash
faqtiv show-instructions
```

This command will display the current agent instructions stored in the `instructions.txt` file.

#### Updating Agent Instructions

To update the agent instructions, use the `update-instructions` command:

```bash
faqtiv update-instructions <newInstructions>
```

- `<newInstructions>`: The new instructions for the agent.

This command will update the `instructions.txt` file in your project which is added as part of the task code generation prompt.

### Running Ad-Hoc Tasks

To compile and run an ad-hoc task based on a description, use the `run-ad-hoc-task` command:

```bash
faqtiv run-ad-hoc-task <description>
```

- `<description>`: The description of the ad-hoc task.

This will generate a temporary task, compile it using the available functions and libraries, then run it and output the result.